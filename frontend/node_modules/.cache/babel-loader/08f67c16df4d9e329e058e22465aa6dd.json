{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andrey Torres\\\\Desktop\\\\omnistack\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey Torres\\\\Desktop\\\\omnistack\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1]; //Inicializamos o useState como array pois oq temos é um array de spots\n\n\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get(\"/dashboard\", {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []); //Passamos o [] vazio para que a função useEffect seja realizada apenas uma vez (Ao inicializar a página)\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, spot.price)))));\n}","map":{"version":3,"sources":["C:/Users/Andrey Torres/Desktop/omnistack/frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","api","Dashboard","spots","setSpots","loadSpots","user_id","localStorage","getItem","response","get","headers","data","map","spot","company","price"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA,oBACLH,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACxBI,KADwB;AAAA,QACjBC,QADiB,kBACS;;;AAExCJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeK,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAhB;AACA,YAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAJ,CAAQ,YAAR,EAAsB;AACzCC,QAAAA,OAAO,EAAE;AAACL,UAAAA;AAAD;AADgC,OAAtB,CAAvB;AAGAF,MAAAA,QAAQ,CAACK,QAAQ,CAACG,IAAV,CAAR;AAEH;;AAEDP,IAAAA,SAAS;AACZ,GAXQ,EAWN,EAXM,CAAT,CAH+B,CAcvB;;AAER,SACI,0CACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACU,GAAN,CAAUC,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,IAAI,CAACC,OAAd,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAI,CAACE,KAAZ,CAHJ,CADH,CADL,CADJ,CADJ;AAcH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../../services/api';\r\n\r\nexport default function Dashboard(){\r\n    const [spots, setSpots] = useState([]); //Inicializamos o useState como array pois oq temos é um array de spots\r\n\r\n    useEffect(() => {\r\n        async function loadSpots() {\r\n            const user_id = localStorage.getItem('user');\r\n            const response = await api.get(\"/dashboard\", {\r\n                headers: {user_id}\r\n            });\r\n            setSpots(response.data);\r\n            \r\n        }\r\n\r\n        loadSpots();\r\n    }, []); //Passamos o [] vazio para que a função useEffect seja realizada apenas uma vez (Ao inicializar a página)\r\n    \r\n    return(\r\n        <>\r\n            <ul className=\"spot-list\">\r\n                {spots.map(spot => (\r\n                    <li>\r\n                        <header />\r\n                        <strong>{spot.company}</strong>\r\n                        <span>{spot.price}</span>\r\n                    </li>\r\n                ))}\r\n           </ul>\r\n        </>\r\n    );\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}