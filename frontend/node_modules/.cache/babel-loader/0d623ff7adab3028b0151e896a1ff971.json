{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andrey Torres\\\\Desktop\\\\omnistack\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey Torres\\\\Desktop\\\\omnistack\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; //Criar links que irão para outra rota sem a necessidade do history.push\n\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1]; //Inicializamos o useState como array pois oq temos é um array de spots\n\n\n  useEffect(() => {\n    const user_id = localStorage.getItem('user');\n    const socket = socketio('http://localhost:3333', {\n      query: {\n        user_id\n      }\n    }); //-------- Brincando de socket ----------//\n    // socket.on('hello', data => {\n    //     console.log(data)\n    // })\n    // socket.emit('omni', 'stack');\n  }, []);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get(\"/dashboard\", {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data); //console.log(user_id);\n      //console.log(response);\n    }\n\n    loadSpots();\n  }, []); //A função (1º Parametro) será executada quando houverem alterações no segundo parametro\n  //Passamos o [] vazio para que a função useEffect seja realizada apenas uma vez (Ao inicializar a página)\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: `url(${spot.thumbnail_url})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, spot.price ? `R$${spot.price}/dia` : 'GRATUITO')))), React.createElement(Link, {\n    to: \"new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["C:/Users/Andrey Torres/Desktop/omnistack/frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Link","socketio","api","Dashboard","spots","setSpots","user_id","localStorage","getItem","socket","query","loadSpots","response","get","headers","data","map","spot","_id","backgroundImage","thumbnail_url","company","price"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAAyC;;AACzC,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA,oBACLL,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACxBM,KADwB;AAAA,QACjBC,QADiB,kBACS;;;AAExCN,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMO,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAhB;AAEA,UAAMC,MAAM,GAAGR,QAAQ,CAAC,uBAAD,EAA0B;AAC7CS,MAAAA,KAAK,EAAE;AAAEJ,QAAAA;AAAF;AADsC,KAA1B,CAAvB,CAHW,CAOX;AACA;AACA;AACA;AAEA;AAEH,GAdQ,EAcN,EAdM,CAAT;AAiBAP,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,SAAf,GAA2B;AACvB,YAAML,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAhB;AACA,YAAMI,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAsB;AACzCC,QAAAA,OAAO,EAAE;AAACR,UAAAA;AAAD;AADgC,OAAtB,CAAvB;AAGAD,MAAAA,QAAQ,CAACO,QAAQ,CAACG,IAAV,CAAR,CALuB,CAMvB;AACA;AAEH;;AAEDJ,IAAAA,SAAS;AACZ,GAbQ,EAaN,EAbM,CAAT,CApB+B,CAiCvB;AACR;;AAEA,SACI,0CACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACY,GAAN,CAAUC,IAAI,IACX;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAG,OAAMF,IAAI,CAACG,aAAc;AAA5C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,IAAI,CAACI,OAAd,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAI,CAACK,KAAL,GAAc,KAAIL,IAAI,CAACK,KAAM,MAA7B,GAAqC,UAA5C,CAHJ,CADH,CADL,CADJ,EAWG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADL,CAXH,CADJ;AAmBH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; //Criar links que irão para outra rota sem a necessidade do history.push\r\nimport socketio from 'socket.io-client';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\n\r\nexport default function Dashboard(){\r\n    const [spots, setSpots] = useState([]); //Inicializamos o useState como array pois oq temos é um array de spots\r\n\r\n    useEffect(() =>{\r\n        const user_id = localStorage.getItem('user');\r\n\r\n        const socket = socketio('http://localhost:3333', {\r\n            query: { user_id },\r\n        });\r\n\r\n        //-------- Brincando de socket ----------//\r\n        // socket.on('hello', data => {\r\n        //     console.log(data)\r\n        // })\r\n\r\n        // socket.emit('omni', 'stack');\r\n        \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        async function loadSpots() {\r\n            const user_id = localStorage.getItem('user');\r\n            const response = await api.get(\"/dashboard\", {\r\n                headers: {user_id}\r\n            });\r\n            setSpots(response.data);\r\n            //console.log(user_id);\r\n            //console.log(response);\r\n            \r\n        }\r\n\r\n        loadSpots();\r\n    }, []); //A função (1º Parametro) será executada quando houverem alterações no segundo parametro\r\n    //Passamos o [] vazio para que a função useEffect seja realizada apenas uma vez (Ao inicializar a página)\r\n    \r\n    return(\r\n        <>\r\n            <ul className=\"spot-list\">\r\n                {spots.map(spot => (\r\n                    <li key={spot._id}>\r\n                        <header style={{backgroundImage: `url(${spot.thumbnail_url})`}}/>\r\n                        <strong>{spot.company}</strong>\r\n                        <span>{spot.price ? `R$${spot.price}/dia` : 'GRATUITO'}</span>\r\n                    </li>\r\n                ))}\r\n           </ul>\r\n\r\n           <Link to=\"new\">\r\n                <button className=\"btn\">Cadastrar novo spot</button>\r\n           </Link>\r\n                \r\n        </>\r\n    );\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}