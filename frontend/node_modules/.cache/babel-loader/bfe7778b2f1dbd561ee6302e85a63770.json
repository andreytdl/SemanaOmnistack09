{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andrey Torres\\\\Desktop\\\\omnistack\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrey Torres\\\\Desktop\\\\omnistack\\\\frontend\\\\src\\\\pages\\\\New\\\\index.js\";\nimport React, { useState, useMemo } from 'react'; //useMemo -> fazer preview da imagem\n\nimport api from '../../services/api';\nimport camera from \"../../assets/camera.svg\";\nimport './styles.css';\nexport default function New() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        company = _useState2[0],\n        setCompany = _useState2[1]; //Valor inicial\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        techs = _useState4[0],\n        setTechs = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        price = _useState6[0],\n        setPrice = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        thumbnail = _useState8[0],\n        setThumbnail = _useState8[1];\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null; //Url para variavel temporaria (Caso existir)\n  }, [thumbnail]);\n\n  async function handleSubmit() {\n    const data = new FormData();\n    data.append('thumbnail', thumbnail);\n    data.append('company', company);\n    data.append('techs', techs);\n    data.append('price', price);\n    const response = await api.post('/spots');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: `url(${preview})`\n    } //Colocando um preview\n    ,\n    className: thumbnail ? 'has-thumbnail' : '' //Adicionando um True ou False para saber se existe uma imagem no preview\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"Select img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"EMPRESA *\"), React.createElement(\"input\", {\n    id: \"company\",\n    placeholder: \"Sua empresa incr\\xEDvel\",\n    value: company,\n    onChange: event => setCompany(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"techs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"TECNOLOGIAS * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"(separadas por virgula)\")), React.createElement(\"input\", {\n    id: \"techs\",\n    placeholder: \"Quais tecnologias usam?\",\n    value: techs,\n    onChange: event => setTechs(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"VALOR DA DI\\xC1RIA * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"(em branco para gratuito)\")), React.createElement(\"input\", {\n    id: \"price\",\n    placeholder: \"Valor cobrado por dia\",\n    value: price,\n    onChange: event => setPrice(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" Cadastrar \"));\n}","map":{"version":3,"sources":["C:/Users/Andrey Torres/Desktop/omnistack/frontend/src/pages/New/index.js"],"names":["React","useState","useMemo","api","New","company","setCompany","techs","setTechs","price","setPrice","thumbnail","setThumbnail","preview","URL","createObjectURL","handleSubmit","data","FormData","append","response","post","backgroundImage","event","target","files","camera","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'; //useMemo -> fazer preview da imagem\r\nimport api from '../../services/api'\r\nimport camera from '../../assets/camera.svg';\r\n\r\nimport './styles.css'\r\n\r\nexport default function New(){\r\n    const [company, setCompany] = useState(''); //Valor inicial\r\n    const [techs, setTechs] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n\r\n    const preview = useMemo(() => {\r\n        return thumbnail ? URL.createObjectURL(thumbnail) : null; //Url para variavel temporaria (Caso existir)\r\n    }, [thumbnail])\r\n\r\n    async function handleSubmit(){\r\n        const data = new FormData();\r\n\r\n        data.append('thumbnail', thumbnail);\r\n        data.append('company', company);\r\n        data.append('techs', techs);\r\n        data.append('price', price);\r\n\r\n        const response = await api.post('/spots', )\r\n\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <label \r\n            id=\"thumbnail\" \r\n            style = {{ backgroundImage: `url(${preview})`}} //Colocando um preview\r\n            className= {thumbnail ? 'has-thumbnail' : ''} //Adicionando um True ou False para saber se existe uma imagem no preview\r\n            \r\n            > \r\n                <input type=\"file\" onChange = {event => setThumbnail(event.target.files[0])}/>\r\n                <img src={camera} alt=\"Select img\"/>\r\n            </label>\r\n\r\n            <label htmlFor=\"company\">EMPRESA *</label>\r\n            <input\r\n                id=\"company\"\r\n                placeholder=\"Sua empresa incrível\"\r\n                value={company}\r\n                onChange={event => setCompany(event.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"techs\">TECNOLOGIAS * <span>(separadas por virgula)</span></label>\r\n            <input\r\n                id=\"techs\"\r\n                placeholder=\"Quais tecnologias usam?\"\r\n                value={techs}\r\n                onChange={event => setTechs(event.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"price\">VALOR DA DIÁRIA * <span>(em branco para gratuito)</span></label>\r\n            <input\r\n                id=\"price\"\r\n                placeholder=\"Valor cobrado por dia\"\r\n                value={price}\r\n                onChange={event => setPrice(event.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn\"> Cadastrar </button>\r\n\r\n\r\n        </form>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}